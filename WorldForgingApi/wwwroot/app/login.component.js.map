{"version":3,"sources":["login.component.ts"],"names":["LoginComponent","fb","router","authService","this","title","loginForm","loginError","externalProviderWindow","isLoggedIn","navigate","group","username","forms_1","Validators","required","password","prototype","performLogin","e","_this","preventDefault","value","login","subscribe","data","auth","getAuth","alert","access_token","err","console","log","callExternalLogin","providerName","url","w","screen","width","h","height","params","close","window","open","__decorate","core_1","Component","selector","template","exports_1"],"mappings":"igCAmCAA,eAAA,WAMI,QAAAA,gBACYC,GACAC,OACAC,aAFAC,KAAAH,GAAAA,GACAG,KAAAF,OAAAA,OACAE,KAAAD,YAAAA,YARZC,KAAAC,MAAQ,QACRD,KAAAE,UAAY,KACZF,KAAAG,YAAa,EACbH,KAAAI,uBAAyB,KAMjBJ,KAAKD,YAAYM,cACjBL,KAAKF,OAAOQ,UAAU,KAE1BN,KAAKE,UAAYL,GAAGU,OAChBC,UAAW,GAAIC,QAAAC,WAAWC,UAC1BC,UAAW,GAAIH,QAAAC,WAAWC,YAmCtC,MA/BIf,gBAAAiB,UAAAC,aAAA,SAAaC,GAAb,GAAAC,OAAAhB,IACIe,GAAEE,gBACF,IAAIT,UAAWR,KAAKE,UAAUgB,MAAMV,SAChCI,SAAWZ,KAAKE,UAAUgB,MAAMN,QACpCZ,MAAKD,YAAYoB,MAAMX,SAAUI,UAC5BQ,UAAU,SAACC,MAERL,MAAKb,YAAa,CAClB,IAAImB,MAAON,MAAKjB,YAAYwB,SAC5BC,OAAM,iBAAmBF,KAAKG,cAC9BT,MAAKlB,OAAOQ,UAAU,MAE1B,SAACoB,KACGC,QAAQC,IAAIF,KAEZV,MAAKb,YAAa,KAI9BP,eAAAiB,UAAAgB,kBAAA,SAAkBC,cACd,GAAIC,KAAM,8BAAgCD,aAEtCE,EAAKC,OAAOC,OAAS,KAAQ,KAAOD,OAAOC,MAC3CC,EAAKF,OAAOG,QAAU,IAAO,IAAMH,OAAOG,OAC1CC,OAAS,kDAAoDL,EAAI,YAAcG,CAE/EnC,MAAKI,wBACLJ,KAAKI,uBAAuBkC,QAEhCtC,KAAKI,uBAAyBmC,OAAOC,KAAKT,IAAK,mBAAoBM,QAAQ,IA9EnFzC,eAAA6C,YAACC,OAAAC,WACGC,SAAU,QACVC,SAAU,85CA4BdC,UAAA,iBAAAlD","file":"login.component.js","sourcesContent":["import {Component} from \"@angular/core\";\r\nimport {FormBuilder, Validators} from \"@angular/forms\";\r\nimport {Router} from \"@angular/router\";\r\nimport {AuthService} from \"./auth.service\";\r\n\r\n@Component({\r\n    selector: \"login\",\r\n    template: `\r\n    <div class=\"login-container\">\r\n      <h2 class=\"form-login-heading\">Login</h2>\r\n      <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"loginError\"><strong>Warning:</strong> Username or Password mismatch</div>\r\n      <form class=\"form-login\" [formGroup]=\"loginForm\" (submit)=\"performLogin($event)\">\r\n        <input formControlName=\"username\" type=\"text\" class=\"form-control\" placeholder=\"Your username or e-mail address\" required autofocus />\r\n        <input formControlName=\"password\" type=\"password\" class=\"form-control\" placeholder=\"Your password\" required />\r\n        <div class=\"checkbox\">\r\n          <label>\r\n            <input type=\"checkbox\" value=\"remember-me\">\r\n            Remember me\r\n          </label>\r\n        </div>\r\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n      </form>\r\n<button class=\"btn btn-sm btn-default btn-block\" type=\"submit\" (click)=\"callExternalLogin('Facebook')\">\r\n        Login with Facebook\r\n    </button>\r\n    <button class=\"btn btn-sm btn-default btn-block\" type=\"submit\" (click)=\"callExternalLogin('Google')\">\r\n        Login with Google\r\n    </button>\r\n    <button class=\"btn btn-sm btn-default btn-block\" type=\"submit\" (click)=\"callExternalLogin('Twitter')\">\r\n        Login with Twitter\r\n    </button>\r\n    </div>\r\n    `\r\n})\r\n\r\nexport class LoginComponent {\r\n    title = \"Login\";\r\n    loginForm = null;\r\n    loginError = false;\r\n    externalProviderWindow = null;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private router: Router,\r\n        private authService: AuthService) {\r\n        if (this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\r\n        this.loginForm = fb.group({\r\n            username: [\"\", Validators.required],\r\n            password: [\"\", Validators.required]\r\n        });\r\n    }\r\n\r\n    performLogin(e) {\r\n        e.preventDefault();\r\n        var username = this.loginForm.value.username;\r\n        var password = this.loginForm.value.password;\r\n        this.authService.login(username, password)\r\n            .subscribe((data) => {\r\n                // login successful\r\n                this.loginError = false;\r\n                var auth = this.authService.getAuth();\r\n                alert(\"Our Token is: \" + auth.access_token);\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (err) => {\r\n                console.log(err);\r\n                // login failure\r\n                this.loginError = true;\r\n            });\r\n    }\r\n\r\n    callExternalLogin(providerName: string) {\r\n        var url = \"api/Accounts/ExternalLogin/\" + providerName;\r\n        // minimalistic mobile devices support\r\n        var w = (screen.width >= 1050) ? 1050 : screen.width;\r\n        var h = (screen.height >= 550) ? 550 : screen.height;\r\n        var params = \"toolbar=yes,scrollbars=yes,resizable=yes,width=\" + w + \", height=\" + h;\r\n        // close previously opened windows (if any)\r\n        if (this.externalProviderWindow) {\r\n            this.externalProviderWindow.close();\r\n        }\r\n        this.externalProviderWindow = window.open(url, \"ExternalProvider\", params, false);\r\n    }\r\n}\r\n"]}