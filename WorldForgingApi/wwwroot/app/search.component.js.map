{"version":3,"sources":["search.component.ts"],"names":["SearchComponent","articleService","router","this","searchTerms","Subject_1","Subject","prototype","search","term","next","ngOnInit","_this","articles","debounceTime","distinctUntilChanged","switchMap","Observable_1","Observable","of","catch","error","console","log","gotoDetail","article","link","Id","navigate","__decorate","core_1","Component","selector","template","styles","providers","article_service_1","ArticleService","exports_1"],"mappings":"qyCAsDAA,gBAAA,WAGI,QAAAA,iBACYC,eACAC,QADAC,KAAAF,eAAAA,eACAE,KAAAD,OAAAA,OAHJC,KAAAC,YAAc,GAAIC,WAAAC,QA2B9B,MAtBIN,iBAAAO,UAAAC,OAAA,SAAOC,MACHN,KAAKC,YAAYM,KAAKD,OAE1BT,gBAAAO,UAAAI,SAAA,WAAA,GAAAC,OAAAT,IACIA,MAAKU,SAAWV,KAAKC,YAChBU,aAAa,KACbC,uBACAC,UAAU,SAAAP,MAAQ,MAAAA,MAEjBG,MAAKX,eAAeO,OAAOC,MAE3BQ,aAAAC,WAAWC,SACZC,MAAM,SAAAC,OAGP,MADAC,SAAQC,IAAIF,OACLJ,aAAAC,WAAWC,UAG1BnB,gBAAAO,UAAAiB,WAAA,SAAWC,SACP,GAAIC,OAAQ,eAAgBD,QAAQE,GACpCxB,MAAKD,OAAO0B,SAASF,OAlE7B1B,gBAAA6B,YAACC,OAAAC,WACGC,SAAU,iBACVC,SAAU,0ZAYVC,QAAS,4gBAsBTC,WAAYC,kBAAAC,0HAGhBC,UAAA,kBAAAtC","file":"search.component.js","sourcesContent":["import {Component, Input, OnInit} from \"@angular/core\";\r\nimport {Router} from \"@angular/router\";\r\nimport { Observable }        from 'rxjs/Observable';\r\nimport { Subject }           from 'rxjs/Subject';\r\n\r\n// Observable class extensions\r\nimport 'rxjs/add/observable/of';\r\n// Observable operators\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\n\r\nimport {Article} from \"./article\";\r\nimport {ArticleService} from \"./article.service\";\r\n\r\n@Component({\r\n    selector: \"article-search\",\r\n    template: `\r\n        <div id=\"search-component\">\r\n          <h4>Search</h4>\r\n          <input #searchBox id=\"search-box\" (keyup)=\"search(searchBox.value)\" />\r\n          <div id=\"search-results\">\r\n            <div *ngFor=\"let article of articles | async\"\r\n                 (click)=\"gotoDetail(article)\" class=\"search-result\" >\r\n              {{article.Title}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .search-result{\r\n          border-bottom: 1px solid gray;\r\n          border-left: 1px solid gray;\r\n          border-right: 1px solid gray;\r\n          width:195px;\r\n          height: 32px;\r\n          padding: 5px;\r\n          background-color: white;\r\n          cursor: pointer;\r\n        }\r\n        #search-box{\r\n          width: 200px;\r\n          height: 20px;\r\n        }\r\n        #search-component{\r\n          margin-top:46px;\r\n        }\r\n        #search-results{\r\n          position:absolute;\r\n        }\r\n    `],\r\n    providers: [ArticleService]\r\n})\r\n\r\nexport class SearchComponent implements OnInit {\r\n    articles: Observable<Article[]>;\r\n    private searchTerms = new Subject<string>();\r\n    constructor(\r\n        private articleService: ArticleService,\r\n        private router: Router) {}\r\n    // Push a search term into the observable stream.\r\n    search(term: string): void {\r\n        this.searchTerms.next(term);\r\n    }\r\n    ngOnInit(): void {\r\n        this.articles = this.searchTerms\r\n            .debounceTime(300)        // wait 300ms after each keystroke before considering the term\r\n            .distinctUntilChanged()   // ignore if next search term is same as previous\r\n            .switchMap(term => term   // switch to new observable each time the term changes\r\n            // return the http search observable\r\n            ? this.articleService.search(term)\r\n            // or the observable of empty heroes if there was no search term\r\n            : Observable.of<Article[]>([]))\r\n            .catch(error => {\r\n            // TODO: add real error handling\r\n            console.log(error);\r\n            return Observable.of<Article[]>([]);\r\n            });\r\n    }\r\n    gotoDetail(article: Article): void {\r\n        let link = ['article/view', article.Id];\r\n        this.router.navigate(link);\r\n    }\r\n}\r\n"]}