{"version":3,"sources":["entity.service.ts"],"names":["EntityService","http","this","baseUrl","prototype","getAll","url","get","map","res","json","catch","handleError","id","Error","add","entity","post","JSON","stringify","getRequestOptions","response","update","Id","put","delete","http_1","RequestOptions","headers","Headers","Content-Type","error","console","Observable_1","Observable","throw","__decorate","core_1","Injectable","exports_1"],"mappings":"4/BAOAA,cAAA,WACI,QAAAA,eAAoBC,MAAAC,KAAAD,KAAAA,KAEZC,KAAAC,QAAU,gBAwDtB,MArDIH,eAAAI,UAAAC,OAAA,WACI,GAAIC,KAAMJ,KAAKC,OACf,OAAOD,MAAKD,KAAKM,IAAID,KAChBE,IAAI,SAAAC,KAAO,MAAQA,KAAIC,SACvBC,MAAMT,KAAKU,cAIpBZ,cAAAI,UAAAG,IAAA,SAAIM,IACA,GAAU,MAANA,GAAc,KAAM,IAAIC,OAAM,kBAClC,IAAIR,KAAMJ,KAAKC,QAAUU,EACzB,OAAOX,MAAKD,KAAKM,IAAID,KAChBE,IAAI,SAAAC,KAAO,MAAQA,KAAIC,SACvBC,MAAMT,KAAKU,cAIpBZ,cAAAI,UAAAW,IAAA,SAAIC,QACA,GAAIV,KAAMJ,KAAKC,OACf,OAAOD,MAAKD,KAAKgB,KAAKX,IAAKY,KAAKC,UAAUH,QAASd,KAAKkB,qBACnDZ,IAAI,SAAAa,UAAY,MAAAA,UAASX,SACzBC,MAAMT,KAAKU,cAIpBZ,cAAAI,UAAAkB,OAAA,SAAON,QACH,GAAIV,KAAMJ,KAAKC,QAAUa,OAAOO,EAChC,OAAOrB,MAAKD,KAAKuB,IAAIlB,IAAKY,KAAKC,UAAUH,QAASd,KAAKkB,qBAClDZ,IAAI,SAAAa,UAAY,MAAAA,UAASX,SACzBC,MAAMT,KAAKU,cAIpBZ,cAAAI,UAAAqB,OAAA,SAAOZ,IACH,GAAIP,KAAMJ,KAAKC,QAAUU,EACzB,OAAOX,MAAKD,KAAKwB,OAAOnB,KACnBK,MAAMT,KAAKU,cAIZZ,cAAAI,UAAAgB,kBAAR,WACI,MAAO,IAAIM,QAAAC,gBACPC,QAAS,GAAIF,QAAAG,SACTC,eAAgB,wBAKpB9B,cAAAI,UAAAQ,YAAR,SAAoBmB,OAGhB,MADAC,SAAQD,MAAMA,OACPE,aAAAC,WAAWC,MAAMJ,MAAMrB,OAAOqB,OAAS,iBA1DtD/B,cAAAoC,YAACC,OAAAC,uFACDC,UAAA,gBAAAvC","file":"entity.service.js","sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {Http, Response, Headers, RequestOptions} from \"@angular/http\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {Entity} from \"./entity\";\r\nimport {AuthHttp} from \"./auth.http\";\r\n\r\n@Injectable()\r\nexport class EntityService {\r\n    constructor(private http: AuthHttp) { }\r\n\r\n    private baseUrl = \"api/entities/\";  // web api URL\r\n\r\n    // calls the [GET] /api/relationships/ Web API method to retrieve all relationships.\r\n    getAll() {\r\n        var url = this.baseUrl;\r\n        return this.http.get(url)\r\n            .map(res => <Entity>res.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    // calls the [GET] /api/entities/{id} Web API method to retrieve the entity with the given id.\r\n    get(id: number): Promise<Entity> {\r\n        if (id == null) { throw new Error(\"id is required.\"); }\r\n        var url = this.baseUrl + id;\r\n        return this.http.get(url)\r\n            .map(res => <Entity>res.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    // calls the [POST] /api/entities/ Web API method to add a new entity.\r\n    add(entity: Entity) {\r\n        var url = this.baseUrl;\r\n        return this.http.post(url, JSON.stringify(entity), this.getRequestOptions())\r\n            .map(response => response.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    // calls the [PUT] /api/entities/{id} Web API method to update an existing entity.\r\n    update(entity: Entity) {\r\n        var url = this.baseUrl + entity.Id;\r\n        return this.http.put(url, JSON.stringify(entity), this.getRequestOptions())\r\n            .map(response => response.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    // calls the [DELETE] /api/entities/{id} Web API method to delete the entity with the given id.\r\n    delete(id: number) {\r\n        var url = this.baseUrl + id;\r\n        return this.http.delete(url)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    // returns a viable RequestOptions object to handle Json requests\r\n    private getRequestOptions() {\r\n        return new RequestOptions({\r\n            headers: new Headers({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        });\r\n    }\r\n\r\n    private handleError(error: Response) {\r\n        // output errors to the console.\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || \"Server error\");\r\n    }\r\n}\r\n"]}