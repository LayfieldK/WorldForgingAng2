{"version":3,"sources":["stories/services/storyDetails.service.ts"],"names":["StoryService","http","this","storyUrl","prototype","getStoryDetails","storyId","get","map","extractData","catch","handleError","res","body","json","error","errMsg","message","status","statusText","console","Observable_1","Observable","throw","__decorate","core_1","Injectable","exports_1"],"mappings":"86BAMAA,aAAA,WAEI,QAAAA,cAAoBC,MAAAC,KAAAD,KAAAA,KADZC,KAAAC,SAAW,uCAmBvB,MAjBIH,cAAAI,UAAAC,gBAAA,SAAgBC,SACZ,MAAOJ,MAAKD,KAAKM,IAAOL,KAAKC,SAAQ,IAAIG,SACpCE,IAAIN,KAAKO,aACTC,MAAMR,KAAKS,cAEZX,aAAAI,UAAAK,YAAR,SAAoBG,KAChB,GAAIC,MAAOD,IAAIE,MACf,OAAOD,OAEHb,aAAAI,UAAAO,YAAR,SAAoBI,OAGhB,GAAIC,QAAUD,MAAa,QAAIA,MAAME,QACjCF,MAAMG,OAAYH,MAAMG,OAAM,MAAMH,MAAMI,WAAe,cAE7D,OADAC,SAAQL,MAAMC,QACPK,aAAAC,WAAWC,MAAMP,SAnBhChB,aAAAwB,YAACC,OAAAC,6EACDC,UAAA,eAAA3B","file":"storyDetails.service.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Story} from '../story';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Observable }     from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class StoryService {\r\n    private storyUrl = 'http://localhost:14600/api/storyapi/';  // URL to web API\r\n    constructor(private http: Http) { }\r\n    getStoryDetails(storyId: Number): Observable<Story> {\r\n        return this.http.get(`${this.storyUrl}/${storyId}`)\r\n            .map(this.extractData)\r\n            .catch(this.handleError);\r\n    }\r\n    private extractData(res: Response) {\r\n        let body = res.json();\r\n        return body;\r\n    }\r\n    private handleError(error: any) {\r\n        // In a real world app, we might use a remote logging infrastructure\r\n        // We'd also dig deeper into the error to get a better message\r\n        let errMsg = (error.message) ? error.message :\r\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n        console.error(errMsg); // log to console instead\r\n        return Observable.throw(errMsg);\r\n    }\r\n}"]}