{"version":3,"sources":["article-detail-edit.component.ts"],"names":["ArticleDetailEditComponent","authService","articleService","entityService","relationshipService","router","activatedRoute","formBuilder","this","prototype","ngOnInit","_this","console","log","editArticleForm","group","title","forms_1","Validators","required","description","text","entityRelationships","array","initEntityRelationship","getAll","subscribe","data","relationships","error","entities","isLoggedIn","navigate","params","map","do","id","article","article_1","Article","filter","switchMap","get","patchValue","Title","Description","setEntityRelationships","EntityRelationships","onInsert","prepareSaveArticle","add","Id","reset","onUpdate","updatedArticle","update","onDelete","delete","onBack","onArticleDetailView","Entity2Id","Entity2Name","Relationship","FormControl","entityRelationshipFGs","entityRelationship","entityRelationshipFormArray","setControl","addEntityRelationship","control","controls","push","removeEntityRelationship","i","removeAt","formModel","value","saveArticle","Text","__decorate","core_1","Component","selector","template","styles","exports_1"],"mappings":"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","file":"article-detail-edit.component.js","sourcesContent":["import {Component, OnInit} from \"@angular/core\";\r\nimport { Router, ActivatedRoute, Params} from \"@angular/router\";\r\nimport {Article} from \"./article\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport { ArticleService } from \"./article.service\";\r\nimport { EntityService } from \"./entity.service\";\r\nimport { RelationshipService } from \"./relationship.service\";\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { EntityRelationshipEditComponent } from \"./entity-relationship-edit.component\";\r\nimport { EntityRelationship } from \"./entity-relationship\";\r\nimport { Relationship } from \"./relationship\";\r\nimport { Entity } from \"./entity\"\r\n\r\n@Component({\r\n    selector: \"article-detail-edit\",\r\n    template: `\r\n<div *ngIf=\"article\">\r\n    <h2>\r\n        <a href=\"javascript:void(0)\" (click)=\"onBack()\">\r\n            &laquo; Back to Home\r\n        </a>\r\n    </h2>\r\n    <div class=\"article-container\">\r\n        <ul class=\"nav nav-tabs\">\r\n            <li role=\"presentation\" class=\"active\">\r\n                <a href=\"javascript:void(0)\">Edit</a>\r\n            </li>\r\n            <li role=\"presentation\" *ngIf=\"article.Id != 0\">\r\n                <a href=\"javascript:void(0)\" (click)=\"onArticleDetailView(article)\">View</a>\r\n            </li>\r\n        </ul>\r\n        <div class=\"panel panel-default\">\r\n            <div class=\"panel-body\">\r\n                <form class=\"article-detail-edit\" novalidate [formGroup]=\"editArticleForm\">\r\n                    <h3>\r\n                        {{ editArticleForm.get('title').value }}\r\n                        <span class=\"empty-field\" [hidden]=\"editArticleForm.get('title').valid\">\r\n                            Empty Title\r\n                        </span>\r\n                    </h3>\r\n                    <div class=\"form-group has-feedback\" [ngClass]=\"{'has-success': editArticleForm.get('title').valid, 'has-error': !editArticleForm.get('title').valid}\">\r\n                        <label for=\"input-title\">Title</label>\r\n                        <input id=\"input-title\" name=\"input-title\" type=\"text\" class=\"form-control\" formControlName=\"title\" placeholder=\"Insert the title...\"   />\r\n                        <span class=\"glyphicon form-control-feedback\" aria-hidden=\"true\" [ngClass]=\"{'glyphicon-ok': editArticleForm.get('title').valid, 'glyphicon-remove': !editArticleForm.get('title').valid}\"></span>\r\n                        <div [hidden]=\"editArticleForm.get('title').valid\" class=\"alert alert-danger\">\r\n                            You need to enter a valid Title.\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"input-description\">Description</label>\r\n                        <textarea id=\"input-description\" name=\"input-description\" class=\"form-control\" formControlName=\"description\" placeholder=\"Insert a suitable description...\" ></textarea>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"input-text\">Text</label>\r\n                        <textarea id=\"input-text\" name=\"input-text\" class=\"form-control\" formControlName=\"description\" placeholder=\"Insert a suitable description...\"></textarea>\r\n                    </div>\r\n                    <!--entityRelationships-->\r\n                    <div formArrayName=\"entityRelationships\">\r\n                      <div *ngFor=\"let entityRelationship of editArticleForm.controls.entityRelationships.controls; let i=index\" class=\"panel panel-default\">\r\n                        <div class=\"panel-heading\">\r\n                          <span>Relationship {{i + 1}}</span>\r\n                          <span class=\"glyphicon glyphicon-remove pull-right\" *ngIf=\"editArticleForm.controls.entityRelationships.controls.length > 1\" (click)=\"removeEntityRelationship(i)\"></span>\r\n                        </div>\r\n                        <div class=\"panel-body\" [formGroupName]=\"i\">\r\n                          <entity-relationship-edit [group]=\"editArticleForm.controls.entityRelationships.controls[i]\" [entityRelationship]=\"entityRelationship.value\" [relationships]=\"relationships\" [entities]=\"entities\"></entity-relationship-edit>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"margin-20\">\r\n                      <a (click)=\"addEntityRelationship()\" style=\"cursor: default\">\r\n                        Add another relationship +\r\n                      </a>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"article.Id == 0\" class=\"commands insert\">\r\n                        <input type=\"button\" class=\"btn btn-primary\" value=\"Save\" (click)=\"onInsert()\" />\r\n                        <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onBack()\" />\r\n                    </div>\r\n                    <div *ngIf=\"article.Id != 0\" class=\"commands update\">\r\n                        <input type=\"button\" class=\"btn btn-primary\" value=\"Update\" (click)=\"onUpdate()\" />\r\n                        <input type=\"button\" class=\"btn btn-danger\" value=\"Delete\" (click)=\"onDelete(article)\" />\r\n                        <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onArticleDetailView(article)\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n    `,\r\n    styles: []\r\n})\r\n\r\nexport class ArticleDetailEditComponent {\r\n    article: Article;\r\n    relationships: Relationship[];\r\n    entities: Entity[];\r\n\r\n    editArticleForm: FormGroup;\r\n    \r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private articleService: ArticleService,\r\n        private entityService: EntityService,\r\n        private relationshipService: RelationshipService,\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute,\r\n        private formBuilder: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        console.log('article detail edit init');\r\n        this.editArticleForm = this.formBuilder.group({\r\n            title: ['', Validators.required],\r\n            description: ['', Validators.required],\r\n            text: ['', Validators.required],\r\n            entityRelationships: this.formBuilder.array([this.initEntityRelationship()])\r\n        });\r\n\r\n        this.relationshipService.getAll().subscribe(\r\n            (data) => this.relationships = data,\r\n            (error) => console.log(error)\r\n        );\r\n\r\n        this.entityService.getAll().subscribe(\r\n            (data) => this.entities = data,\r\n            (error) => console.log(error)\r\n        );\r\n\r\n        if (!this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\r\n        var id;\r\n        this.activatedRoute.params\r\n            .map(params => +params['id'])\r\n            .do(id => {\r\n                console.log(id);\r\n                if (id) {\r\n                    //console.log(id);\r\n                } else if (id === 0) {\r\n                    //console.log(\"id is 0: adding a new article...\");\r\n                    this.article = new Article(0, \"New Article\", null, null, null);\r\n                } else {\r\n                    //console.log(\"Invalid id: routing back to home...\");\r\n                    this.router.navigate([\"\"]);\r\n                }\r\n            })\r\n            .filter(id => id > 0)\r\n            .switchMap(id => this.articleService.get(id))\r\n            .subscribe(article => {\r\n                this.article = article;\r\n                this.editArticleForm.patchValue({\r\n                    title: this.article.Title,\r\n                    description: this.article.Description,\r\n                    text: \"\"//,\r\n                    ////entityRelationships: this.article.EntityRelationships\r\n                    //entityRelationships: this.editArticleForm.value.entityRelationships\r\n                });\r\n                this.setEntityRelationships(article.EntityRelationships);\r\n            })\r\n            ;\r\n    }\r\n\r\n    onInsert() {\r\n        this.article = this.prepareSaveArticle();\r\n        this.articleService.add(this.article).subscribe(\r\n            (data) => {\r\n                this.article = data;\r\n                console.log(\"Article \" + this.article.Id + \" has been added.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n        this.editArticleForm.reset();\r\n    }\r\n\r\n    onUpdate() {\r\n        let updatedArticle = this.prepareSaveArticle();\r\n        console.log(updatedArticle);\r\n        this.articleService.update(updatedArticle).subscribe(\r\n            (data) => {\r\n                this.article = data;\r\n                console.log(\"Article \" + this.article.Id + \" has been updated.\");\r\n                this.router.navigate([\"article/view\", this.article.Id]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n        this.editArticleForm.reset();\r\n    }\r\n\r\n    onDelete(article : Article) {\r\n        this.article = this.prepareSaveArticle();\r\n        var id = this.article.Id;\r\n        this.articleService.delete(id).subscribe(\r\n            (data) => {\r\n                console.log(\"Article \" + id + \" has been deleted.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate([\"\"]);\r\n    }\r\n\r\n    onArticleDetailView(article: Article) {\r\n        this.router.navigate([\"article/view\", article.Id]);\r\n    }\r\n\r\n    initEntityRelationship() {\r\n        return this.formBuilder.group({\r\n            Entity2Id: 0,\r\n            Entity2Name: \"test\",\r\n            Relationship: new FormControl()\r\n            //street: ['street address', Validators.required]\r\n            //postcode: ['']\r\n        });\r\n    }\r\n\r\n    setEntityRelationships(entityRelationships: EntityRelationship[]) {\r\n        const entityRelationshipFGs = entityRelationships.map(entityRelationship => this.formBuilder.group(entityRelationship));\r\n\r\n        const entityRelationshipFormArray = this.formBuilder.array(entityRelationshipFGs);\r\n        this.editArticleForm.setControl('entityRelationships', entityRelationshipFormArray);\r\n    }\r\n\r\n    //get secretLairs(): FormArray {\r\n    //    return this.heroForm.get('secretLairs') as FormArray;\r\n    //};\r\n\r\n    addEntityRelationship() {\r\n        // add EntityRelationship to the list\r\n        const control = <FormArray>this.editArticleForm.controls['entityRelationships'];\r\n        control.push(this.initEntityRelationship());\r\n    }\r\n\r\n    removeEntityRelationship(i: number) {\r\n        // remove EntityRelationship from the list\r\n        const control = <FormArray>this.editArticleForm.controls['entityRelationships'];\r\n        control.removeAt(i);\r\n    }\r\n\r\n    prepareSaveArticle(): Article {\r\n        const formModel = this.editArticleForm.value;\r\n        const saveArticle: Article = {\r\n            Id: this.article.Id,\r\n            Title: formModel.title,\r\n            Description: formModel.description,\r\n            Text: formModel.text,\r\n            EntityRelationships: null\r\n        };\r\n        return saveArticle;\r\n    }\r\n}\r\n"]}