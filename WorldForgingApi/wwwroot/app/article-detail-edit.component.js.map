{"version":3,"sources":["article-detail-edit.component.ts"],"names":["ArticleDetailEditComponent","authService","articleService","router","activatedRoute","formBuilder","this","prototype","ngOnInit","_this","console","log","editArticleForm","group","title","forms_1","Validators","required","description","text","isLoggedIn","navigate","params","map","do","id","article","article_1","Article","filter","switchMap","get","subscribe","setValue","Title","Description","onInsert","prepareSaveArticle","add","data","Id","error","reset","onUpdate","updatedArticle","update","onDelete","delete","onBack","onArticleDetailView","formModel","value","saveArticle","Text","__decorate","core_1","Component","selector","template","styles","exports_1"],"mappings":"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","file":"article-detail-edit.component.js","sourcesContent":["import {Component, OnInit} from \"@angular/core\";\r\nimport { Router, ActivatedRoute, Params} from \"@angular/router\";\r\nimport {Article} from \"./article\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport { ArticleService } from \"./article.service\";\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: \"article-detail-edit\",\r\n    template: `\r\n<div *ngIf=\"article\">\r\n    <h2>\r\n        <a href=\"javascript:void(0)\" (click)=\"onBack()\">\r\n            &laquo; Back to Home\r\n        </a>\r\n    </h2>\r\n    <div class=\"article-container\">\r\n        <ul class=\"nav nav-tabs\">\r\n            <li role=\"presentation\" class=\"active\">\r\n                <a href=\"javascript:void(0)\">Edit</a>\r\n            </li>\r\n            <li role=\"presentation\" *ngIf=\"article.Id != 0\">\r\n                <a href=\"javascript:void(0)\" (click)=\"onArticleDetailView(article)\">View</a>\r\n            </li>\r\n        </ul>\r\n        <div class=\"panel panel-default\">\r\n            <div class=\"panel-body\">\r\n                <form class=\"article-detail-edit\" novalidate [formGroup]=\"editArticleForm\">\r\n                    <h3>\r\n                        {{ editArticleForm.get('title').value }}\r\n                        <span class=\"empty-field\" [hidden]=\"editArticleForm.get('title').valid\">\r\n                            Empty Title\r\n                        </span>\r\n                    </h3>\r\n                    <div class=\"form-group has-feedback\" [ngClass]=\"{'has-success': editArticleForm.get('title').valid, 'has-error': !editArticleForm.get('title').valid}\">\r\n                        <label for=\"input-title\">Title</label>\r\n                        <input id=\"input-title\" name=\"input-title\" type=\"text\" class=\"form-control\" formControlName=\"title\" placeholder=\"Insert the title...\"   />\r\n                        <span class=\"glyphicon form-control-feedback\" aria-hidden=\"true\" [ngClass]=\"{'glyphicon-ok': editArticleForm.get('title').valid, 'glyphicon-remove': !editArticleForm.get('title').valid}\"></span>\r\n                        <div [hidden]=\"editArticleForm.get('title').valid\" class=\"alert alert-danger\">\r\n                            You need to enter a valid Title.\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"input-description\">Description</label>\r\n                        <textarea id=\"input-description\" name=\"input-description\" class=\"form-control\" formControlName=\"description\" placeholder=\"Insert a suitable description...\" ></textarea>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"input-text\">Text</label>\r\n                        <textarea id=\"input-text\" name=\"input-text\" class=\"form-control\" formControlName=\"description\" placeholder=\"Insert a suitable description...\"></textarea>\r\n                    </div>\r\n                    <div *ngIf=\"article.Id == 0\" class=\"commands insert\">\r\n                        <input type=\"button\" class=\"btn btn-primary\" value=\"Save\" (click)=\"onInsert()\" />\r\n                        <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onBack()\" />\r\n                    </div>\r\n                    <div *ngIf=\"article.Id != 0\" class=\"commands update\">\r\n                        <input type=\"button\" class=\"btn btn-primary\" value=\"Update\" (click)=\"onUpdate()\" />\r\n                        <input type=\"button\" class=\"btn btn-danger\" value=\"Delete\" (click)=\"onDelete(article)\" />\r\n                        <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onArticleDetailView(article)\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n    `,\r\n    styles: []\r\n})\r\n\r\nexport class ArticleDetailEditComponent {\r\n    article: Article;\r\n\r\n    editArticleForm: FormGroup;\r\n    \r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private articleService: ArticleService,\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute,\r\n        private formBuilder: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        console.log('article detail edit init');\r\n        this.editArticleForm = this.formBuilder.group({\r\n            title: ['', Validators.required],\r\n            description: ['', Validators.required],\r\n            text: ['', Validators.required]\r\n        });\r\n\r\n        if (!this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\r\n        var id;\r\n        this.activatedRoute.params\r\n            .map(params => +params['id'])\r\n            .do(id => {\r\n                console.log(id);\r\n                if (id) {\r\n                    console.log(id);\r\n                } else if (id === 0) {\r\n                    console.log(\"id is 0: adding a new article...\");\r\n                    this.article = new Article(0, \"New Article\", null, null);\r\n                } else {\r\n                    console.log(\"Invalid id: routing back to home...\");\r\n                    this.router.navigate([\"\"]);\r\n                }\r\n            })\r\n            .filter(id => id > 0)\r\n            .switchMap(id => this.articleService.get(id))\r\n            .subscribe(article => {\r\n                this.article = article;\r\n                this.editArticleForm.setValue({\r\n                    title: this.article.Title,\r\n                    description: this.article.Description,\r\n                    text: \"\"\r\n                });\r\n            });\r\n    }\r\n\r\n    onInsert() {\r\n        this.article = this.prepareSaveArticle();\r\n        this.articleService.add(this.article).subscribe(\r\n            (data) => {\r\n                this.article = data;\r\n                console.log(\"Article \" + this.article.Id + \" has been added.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n        this.editArticleForm.reset();\r\n    }\r\n\r\n    onUpdate() {\r\n        let updatedArticle = this.prepareSaveArticle();\r\n        console.log(updatedArticle);\r\n        this.articleService.update(updatedArticle).subscribe(\r\n            (data) => {\r\n                this.article = data;\r\n                console.log(\"Article \" + this.article.Id + \" has been updated.\");\r\n                this.router.navigate([\"article/view\", this.article.Id]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n        this.editArticleForm.reset();\r\n    }\r\n\r\n    onDelete(article : Article) {\r\n        this.article = this.prepareSaveArticle();\r\n        var id = this.article.Id;\r\n        this.articleService.delete(id).subscribe(\r\n            (data) => {\r\n                console.log(\"Article \" + id + \" has been deleted.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate([\"\"]);\r\n    }\r\n\r\n    onArticleDetailView(article: Article) {\r\n        this.router.navigate([\"article/view\", article.Id]);\r\n    }\r\n\r\n    prepareSaveArticle(): Article {\r\n        const formModel = this.editArticleForm.value;\r\n        const saveArticle: Article = {\r\n            Id: this.article.Id,\r\n            Title: formModel.title,\r\n            Description: formModel.description,\r\n            Text: formModel.text\r\n        };\r\n        return saveArticle;\r\n    }\r\n}\r\n"]}