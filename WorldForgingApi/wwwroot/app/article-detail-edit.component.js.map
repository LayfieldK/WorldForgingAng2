{"version":3,"sources":["article-detail-edit.component.ts"],"names":["ArticleDetailEditComponent","authService","articleService","router","activatedRoute","this","prototype","ngOnInit","_this","isLoggedIn","navigate","id","snapshot","params","get","subscribe","article","console","log","article_1","Article","onInsert","add","data","Id","error","onUpdate","update","onDelete","delete","onBack","onArticleDetailView","__decorate","core_1","Component","selector","template","styles","exports_1"],"mappings":"2nCAmEAA,2BAAA,WAGI,QAAAA,4BACYC,YACAC,eACAC,OACAC,gBAHAC,KAAAJ,YAAAA,YACAI,KAAAH,eAAAA,eACAG,KAAAF,OAAAA,OACAE,KAAAD,eAAAA,eA8DhB,MA5DIJ,4BAAAM,UAAAC,SAAA,WAAA,GAAAC,OAAAH,IACSA,MAAKJ,YAAYQ,cAClBJ,KAAKF,OAAOO,UAAU,IAE1B,IAAIC,KAAMN,KAAKD,eAAeQ,SAASC,OAAW,EAC9CF,IACAN,KAAKH,eAAeY,IAAIH,IAAII,UACxB,SAAAC,SAAW,MAAAR,OAAKQ,QAAUA,UAGlB,IAAPL,IACLM,QAAQC,IAAI,oCACZb,KAAKW,QAAU,GAAIG,WAAAC,QAAQ,EAAG,cAAe,QAG7CH,QAAQC,IAAI,uCACZb,KAAKF,OAAOO,UAAU,OAI9BV,2BAAAM,UAAAe,SAAA,SAASL,SAAT,GAAAR,OAAAH,IACIA,MAAKH,eAAeoB,IAAIN,SAASD,UAC7B,SAACQ,MACGf,MAAKQ,QAAUO,KACfN,QAAQC,IAAI,WAAaV,MAAKQ,QAAQQ,GAAK,oBAC3ChB,MAAKL,OAAOO,UAAU,MAE1B,SAACe,OAAU,MAAAR,SAAQC,IAAIO,UAI/BzB,2BAAAM,UAAAoB,SAAA,SAASV,SAAT,GAAAR,OAAAH,IACIA,MAAKH,eAAeyB,OAAOX,SAASD,UAChC,SAACQ,MACGf,MAAKQ,QAAUO,KACfN,QAAQC,IAAI,WAAaV,MAAKQ,QAAQQ,GAAK,sBAC3ChB,MAAKL,OAAOO,UAAU,eAAgBF,MAAKQ,QAAQQ,MAEvD,SAACC,OAAU,MAAAR,SAAQC,IAAIO,UAI/BzB,2BAAAM,UAAAsB,SAAA,SAASZ,SAAT,GAAAR,OAAAH,KACQM,GAAKK,QAAQQ,EACjBnB,MAAKH,eAAe2B,OAAOlB,IAAII,UAC3B,SAACQ,MACGN,QAAQC,IAAI,WAAaP,GAAK,sBAC9BH,MAAKL,OAAOO,UAAU,MAE1B,SAACe,OAAU,MAAAR,SAAQC,IAAIO,UAI/BzB,2BAAAM,UAAAwB,OAAA,WACIzB,KAAKF,OAAOO,UAAU,MAG1BV,2BAAAM,UAAAyB,oBAAA,SAAoBf,SAChBX,KAAKF,OAAOO,UAAU,eAAgBM,QAAQQ,MAhItDxB,2BAAAgC,YAACC,OAAAC,WACGC,SAAU,sBACVC,SAAU,srGAwDVC,kLAGJC,UAAA,6BAAAtC","file":"article-detail-edit.component.js","sourcesContent":["import {Component, OnInit} from \"@angular/core\";\r\nimport {Router, ActivatedRoute} from \"@angular/router\";\r\nimport {Article} from \"./article\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport {ArticleService} from \"./article.service\";\r\n\r\n@Component({\r\n    selector: \"article-detail-edit\",\r\n    template: `\r\n<div *ngIf=\"article\">\r\n    <h2>\r\n        <a href=\"javascript:void(0)\" (click)=\"onBack()\">\r\n            &laquo; Back to Home\r\n        </a>\r\n    </h2>\r\n    <div class=\"article-container\">\r\n        <ul class=\"nav nav-tabs\">\r\n            <li role=\"presentation\" class=\"active\">\r\n                <a href=\"javascript:void(0)\">Edit</a>\r\n            </li>\r\n            <li role=\"presentation\" *ngIf=\"article.Id != 0\">\r\n                <a href=\"javascript:void(0)\" (click)=\"onArticleDetailView(article)\">View</a>\r\n            </li>\r\n        </ul>\r\n        <div class=\"panel panel-default\">\r\n            <div class=\"panel-body\">\r\n                <form class=\"article-detail-edit\" #thisForm=\"ngForm\">\r\n                    <h3>\r\n                        {{article.Title}}\r\n                        <span class=\"empty-field\" [hidden]=\"dTitle.valid\">\r\n                            Empty Title\r\n                        </span>\r\n                    </h3>\r\n                    <div class=\"form-group has-feedback\" [ngClass]=\"{'has-success': dTitle.valid, 'has-error': !dTitle.valid}\">\r\n                        <label for=\"input-title\">Title</label>\r\n                        <input id=\"input-title\" name=\"input-title\" type=\"text\" class=\"form-control\" [(ngModel)]=\"article.Title\" placeholder=\"Insert the title...\" required #dTitle=\"ngModel\" />\r\n                        <span class=\"glyphicon form-control-feedback\" aria-hidden=\"true\" [ngClass]=\"{'glyphicon-ok': dTitle.valid, 'glyphicon-remove': !dTitle.valid}\"></span>\r\n                        <div [hidden]=\"dTitle.valid\" class=\"alert alert-danger\">\r\n                            You need to enter a valid Title.\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"input-description\">Description</label>\r\n                        <textarea id=\"input-description\" name=\"input-description\" class=\"form-control\" [(ngModel)]=\"article.Description\" placeholder=\"Insert a suitable description...\" required></textarea>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"input-text\">Text</label>\r\n                        <textarea id=\"input-text\" name=\"input-text\" class=\"form-control\" [(ngModel)]=\"article.Text\" placeholder=\"Insert a suitable description...\"></textarea>\r\n                    </div>\r\n                    <div *ngIf=\"article.Id == 0\" class=\"commands insert\">\r\n                        <input type=\"button\" class=\"btn btn-primary\" value=\"Save\" (click)=\"onInsert(article)\" />\r\n                        <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onBack()\" />\r\n                    </div>\r\n                    <div *ngIf=\"article.Id != 0\" class=\"commands update\">\r\n                        <input type=\"button\" class=\"btn btn-primary\" value=\"Update\" (click)=\"onUpdate(article)\" />\r\n                        <input type=\"button\" class=\"btn btn-danger\" value=\"Delete\" (click)=\"onDelete(article)\" />\r\n                        <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onArticleDetailView(article)\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n    `,\r\n    styles: []\r\n})\r\n\r\nexport class ArticleDetailEditComponent {\r\n    article: Article;\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private articleService: ArticleService,\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n        if (!this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\r\n        var id = +this.activatedRoute.snapshot.params[\"id\"];\r\n        if (id) {\r\n            this.articleService.get(id).subscribe(\r\n                article => this.article = article\r\n            );\r\n        }\r\n        else if (id === 0) {\r\n            console.log(\"id is 0: adding a new article...\");\r\n            this.article = new Article(0, \"New Article\", null);\r\n        }\r\n        else {\r\n            console.log(\"Invalid id: routing back to home...\");\r\n            this.router.navigate([\"\"]);\r\n        }\r\n    }\r\n\r\n    onInsert(article: Article) {\r\n        this.articleService.add(article).subscribe(\r\n            (data) => {\r\n                this.article = data;\r\n                console.log(\"Article \" + this.article.Id + \" has been added.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onUpdate(article: Article) {\r\n        this.articleService.update(article).subscribe(\r\n            (data) => {\r\n                this.article = data;\r\n                console.log(\"Article \" + this.article.Id + \" has been updated.\");\r\n                this.router.navigate([\"article/view\", this.article.Id]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onDelete(article: Article) {\r\n        var id = article.Id;\r\n        this.articleService.delete(id).subscribe(\r\n            (data) => {\r\n                console.log(\"Article \" + id + \" has been deleted.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate([\"\"]);\r\n    }\r\n\r\n    onArticleDetailView(article: Article) {\r\n        this.router.navigate([\"article/view\", article.Id]);\r\n    }\r\n}\r\n"]}