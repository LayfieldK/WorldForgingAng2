{"version":3,"sources":["article-detail-edit.component.ts"],"names":["ArticleDetailEditComponent","authService","articleService","router","activatedRoute","formBuilder","this","prototype","ngOnInit","_this","console","log","editArticleForm","group","title","forms_1","Validators","required","description","text","entityRelationships","array","initEntityRelationship","isLoggedIn","navigate","params","map","do","id","article","article_1","Article","filter","switchMap","get","subscribe","patchValue","Title","Description","setEntityRelationships","EntityRelationships","onInsert","prepareSaveArticle","add","data","Id","error","reset","onUpdate","updatedArticle","update","onDelete","delete","onBack","onArticleDetailView","Entity1Name","entityRelationshipFGs","entityRelationship","entityRelationshipFormArray","setControl","addEntityRelationship","control","controls","push","removeEntityRelationship","i","removeAt","formModel","value","saveArticle","Text","__decorate","core_1","Component","selector","template","styles","exports_1"],"mappings":"2rCAyFAA,2BAAA,WAMI,QAAAA,4BACYC,YACAC,eACAC,OACAC,eACAC,aAJAC,KAAAL,YAAAA,YACAK,KAAAJ,eAAAA,eACAI,KAAAH,OAAAA,OACAG,KAAAF,eAAAA,eACAE,KAAAD,YAAAA,YAqIhB,MAnIIL,4BAAAO,UAAAC,SAAA,WAAA,GAAAC,OAAAH,IACII,SAAQC,IAAI,4BACZL,KAAKM,gBAAkBN,KAAKD,YAAYQ,OACpCC,OAAQ,GAAIC,QAAAC,WAAWC,UACvBC,aAAc,GAAIH,QAAAC,WAAWC,UAC7BE,MAAO,GAAIJ,QAAAC,WAAWC,UACtBG,oBAAqBd,KAAKD,YAAYgB,OAAOf,KAAKgB,6BAGjDhB,KAAKL,YAAYsB,cAClBjB,KAAKH,OAAOqB,UAAU,IAG1BlB,MAAKF,eAAeqB,OACfC,IAAI,SAAAD,QAAU,OAACA,OAAW,KAC1BE,GAAG,SAAAC,IACAlB,QAAQC,IAAIiB,IACRA,GACAlB,QAAQC,IAAIiB,IACE,IAAPA,IACPlB,QAAQC,IAAI,oCACZF,MAAKoB,QAAU,GAAIC,WAAAC,QAAQ,EAAG,cAAe,KAAM,KAAM,QAEzDrB,QAAQC,IAAI,uCACZF,MAAKN,OAAOqB,UAAU,QAG7BQ,OAAO,SAAAJ,IAAM,MAAAA,IAAK,IAClBK,UAAU,SAAAL,IAAM,MAAAnB,OAAKP,eAAegC,IAAIN,MACxCO,UAAU,SAAAN,SACPpB,MAAKoB,QAAUA,QACfpB,MAAKG,gBAAgBwB,YACjBtB,MAAOL,MAAKoB,QAAQQ,MACpBnB,YAAaT,MAAKoB,QAAQS,YAC1BnB,KAAM,KAIVV,MAAK8B,uBAAuBV,QAAQW,wBAKhDxC,2BAAAO,UAAAkC,SAAA,WAAA,GAAAhC,OAAAH,IACIA,MAAKuB,QAAUvB,KAAKoC,qBACpBpC,KAAKJ,eAAeyC,IAAIrC,KAAKuB,SAASM,UAClC,SAACS,MACGnC,MAAKoB,QAAUe,KACflC,QAAQC,IAAI,WAAaF,MAAKoB,QAAQgB,GAAK,oBAC3CpC,MAAKN,OAAOqB,UAAU,MAE1B,SAACsB,OAAU,MAAApC,SAAQC,IAAImC,SAE3BxC,KAAKM,gBAAgBmC,SAGzB/C,2BAAAO,UAAAyC,SAAA,WAAA,GAAAvC,OAAAH,KACQ2C,eAAiB3C,KAAKoC,oBAC1BhC,SAAQC,IAAIsC,gBACZ3C,KAAKJ,eAAegD,OAAOD,gBAAgBd,UACvC,SAACS,MACGnC,MAAKoB,QAAUe,KACflC,QAAQC,IAAI,WAAaF,MAAKoB,QAAQgB,GAAK,sBAC3CpC,MAAKN,OAAOqB,UAAU,eAAgBf,MAAKoB,QAAQgB,MAEvD,SAACC,OAAU,MAAApC,SAAQC,IAAImC,SAE3BxC,KAAKM,gBAAgBmC,SAGzB/C,2BAAAO,UAAA4C,SAAA,SAAStB,SAAT,GAAApB,OAAAH,IACIA,MAAKuB,QAAUvB,KAAKoC,oBACpB,IAAId,IAAKtB,KAAKuB,QAAQgB,EACtBvC,MAAKJ,eAAekD,OAAOxB,IAAIO,UAC3B,SAACS,MACGlC,QAAQC,IAAI,WAAaiB,GAAK,sBAC9BnB,MAAKN,OAAOqB,UAAU,MAE1B,SAACsB,OAAU,MAAApC,SAAQC,IAAImC,UAI/B9C,2BAAAO,UAAA8C,OAAA,WACI/C,KAAKH,OAAOqB,UAAU,MAG1BxB,2BAAAO,UAAA+C,oBAAA,SAAoBzB,SAChBvB,KAAKH,OAAOqB,UAAU,eAAgBK,QAAQgB,MAGlD7C,2BAAAO,UAAAe,uBAAA,WACI,MAAOhB,MAAKD,YAAYQ,OACpB0C,YAAa,UAMrBvD,2BAAAO,UAAAgC,uBAAA,SAAuBnB,qBAAvB,GAAAX,OAAAH,KACUkD,sBAAwBpC,oBAAoBM,IAAI,SAAA+B,oBAAsB,MAAAhD,OAAKJ,YAAYQ,MAAM4C,sBAC7FC,4BAA8BpD,KAAKD,YAAYgB,MAAMmC,sBAC3DlD,MAAKM,gBAAgB+C,WAAW,sBAAuBD,8BAO3D1D,2BAAAO,UAAAqD,sBAAA,WAEI,GAAMC,SAAqBvD,KAAKM,gBAAgBkD,SAA8B,mBAC9ED,SAAQE,KAAKzD,KAAKgB,2BAGtBtB,2BAAAO,UAAAyD,yBAAA,SAAyBC,GAErB,GAAMJ,SAAqBvD,KAAKM,gBAAgBkD,SAA8B,mBAC9ED,SAAQK,SAASD,IAGrBjE,2BAAAO,UAAAmC,mBAAA,WACI,GAAMyB,WAAY7D,KAAKM,gBAAgBwD,MACjCC,aACFxB,GAAIvC,KAAKuB,QAAQgB,GACjBR,MAAO8B,UAAUrD,MACjBwB,YAAa6B,UAAUjD,YACvBoD,KAAMH,UAAUhD,KAChBqB,oBAAqB,KAEzB,OAAO6B,cA9NfrE,2BAAAuE,YAACC,OAAAC,WACGC,SAAU,sBACVC,SAAU,y/IA2EVC,sMAGJC,UAAA,6BAAA7E","file":"article-detail-edit.component.js","sourcesContent":["import {Component, OnInit} from \"@angular/core\";\r\nimport { Router, ActivatedRoute, Params} from \"@angular/router\";\r\nimport {Article} from \"./article\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport { ArticleService } from \"./article.service\";\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { EntityRelationshipEditComponent } from \"./entity-relationship-edit.component\";\r\nimport { EntityRelationship } from \"./entity-relationship\";\r\n\r\n@Component({\r\n    selector: \"article-detail-edit\",\r\n    template: `\r\n<div *ngIf=\"article\">\r\n    <h2>\r\n        <a href=\"javascript:void(0)\" (click)=\"onBack()\">\r\n            &laquo; Back to Home\r\n        </a>\r\n    </h2>\r\n    <div class=\"article-container\">\r\n        <ul class=\"nav nav-tabs\">\r\n            <li role=\"presentation\" class=\"active\">\r\n                <a href=\"javascript:void(0)\">Edit</a>\r\n            </li>\r\n            <li role=\"presentation\" *ngIf=\"article.Id != 0\">\r\n                <a href=\"javascript:void(0)\" (click)=\"onArticleDetailView(article)\">View</a>\r\n            </li>\r\n        </ul>\r\n        <div class=\"panel panel-default\">\r\n            <div class=\"panel-body\">\r\n                <form class=\"article-detail-edit\" novalidate [formGroup]=\"editArticleForm\">\r\n                    <h3>\r\n                        {{ editArticleForm.get('title').value }}\r\n                        <span class=\"empty-field\" [hidden]=\"editArticleForm.get('title').valid\">\r\n                            Empty Title\r\n                        </span>\r\n                    </h3>\r\n                    <div class=\"form-group has-feedback\" [ngClass]=\"{'has-success': editArticleForm.get('title').valid, 'has-error': !editArticleForm.get('title').valid}\">\r\n                        <label for=\"input-title\">Title</label>\r\n                        <input id=\"input-title\" name=\"input-title\" type=\"text\" class=\"form-control\" formControlName=\"title\" placeholder=\"Insert the title...\"   />\r\n                        <span class=\"glyphicon form-control-feedback\" aria-hidden=\"true\" [ngClass]=\"{'glyphicon-ok': editArticleForm.get('title').valid, 'glyphicon-remove': !editArticleForm.get('title').valid}\"></span>\r\n                        <div [hidden]=\"editArticleForm.get('title').valid\" class=\"alert alert-danger\">\r\n                            You need to enter a valid Title.\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"input-description\">Description</label>\r\n                        <textarea id=\"input-description\" name=\"input-description\" class=\"form-control\" formControlName=\"description\" placeholder=\"Insert a suitable description...\" ></textarea>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"input-text\">Text</label>\r\n                        <textarea id=\"input-text\" name=\"input-text\" class=\"form-control\" formControlName=\"description\" placeholder=\"Insert a suitable description...\"></textarea>\r\n                    </div>\r\n                    <!--entityRelationships-->\n                    <div formArrayName=\"entityRelationships\">\n                      <div *ngFor=\"let entityRelationship of editArticleForm.controls.entityRelationships.controls; let i=index\" class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                          <span>Relationship {{i + 1}}</span>\n                          <span class=\"glyphicon glyphicon-remove pull-right\" *ngIf=\"editArticleForm.controls.entityRelationships.controls.length > 1\" (click)=\"removeEntityRelationship(i)\"></span>\n                        </div>\n                        <div class=\"panel-body\" [formGroupName]=\"i\">\n                          <entity-relationship-edit [group]=\"editArticleForm.controls.entityRelationships.controls[i]\" [entityRelationship]=\"entityRelationship\"></entity-relationship-edit>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"margin-20\">\n                      <a (click)=\"addEntityRelationship()\" style=\"cursor: default\">\n                        Add another relationship +\n                      </a>\n                    </div>\r\n\r\n                    <div *ngIf=\"article.Id == 0\" class=\"commands insert\">\r\n                        <input type=\"button\" class=\"btn btn-primary\" value=\"Save\" (click)=\"onInsert()\" />\r\n                        <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onBack()\" />\r\n                    </div>\r\n                    <div *ngIf=\"article.Id != 0\" class=\"commands update\">\r\n                        <input type=\"button\" class=\"btn btn-primary\" value=\"Update\" (click)=\"onUpdate()\" />\r\n                        <input type=\"button\" class=\"btn btn-danger\" value=\"Delete\" (click)=\"onDelete(article)\" />\r\n                        <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onArticleDetailView(article)\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n    `,\r\n    styles: []\r\n})\r\n\r\nexport class ArticleDetailEditComponent {\r\n    article: Article;\r\n\r\n    editArticleForm: FormGroup;\r\n    \r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private articleService: ArticleService,\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute,\r\n        private formBuilder: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        console.log('article detail edit init');\r\n        this.editArticleForm = this.formBuilder.group({\r\n            title: ['', Validators.required],\r\n            description: ['', Validators.required],\r\n            text: ['', Validators.required],\r\n            entityRelationships: this.formBuilder.array([this.initEntityRelationship()])\r\n        });\r\n\r\n        if (!this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\r\n        var id;\r\n        this.activatedRoute.params\r\n            .map(params => +params['id'])\r\n            .do(id => {\r\n                console.log(id);\r\n                if (id) {\r\n                    console.log(id);\r\n                } else if (id === 0) {\r\n                    console.log(\"id is 0: adding a new article...\");\r\n                    this.article = new Article(0, \"New Article\", null, null, null);\r\n                } else {\r\n                    console.log(\"Invalid id: routing back to home...\");\r\n                    this.router.navigate([\"\"]);\r\n                }\r\n            })\r\n            .filter(id => id > 0)\r\n            .switchMap(id => this.articleService.get(id))\r\n            .subscribe(article => {\r\n                this.article = article;\r\n                this.editArticleForm.patchValue({\r\n                    title: this.article.Title,\r\n                    description: this.article.Description,\r\n                    text: \"\"//,\r\n                    ////entityRelationships: this.article.EntityRelationships\r\n                    //entityRelationships: this.editArticleForm.value.entityRelationships\r\n                });\r\n                this.setEntityRelationships(article.EntityRelationships);\r\n            })\r\n            ;\r\n    }\r\n\r\n    onInsert() {\r\n        this.article = this.prepareSaveArticle();\r\n        this.articleService.add(this.article).subscribe(\r\n            (data) => {\r\n                this.article = data;\r\n                console.log(\"Article \" + this.article.Id + \" has been added.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n        this.editArticleForm.reset();\r\n    }\r\n\r\n    onUpdate() {\r\n        let updatedArticle = this.prepareSaveArticle();\r\n        console.log(updatedArticle);\r\n        this.articleService.update(updatedArticle).subscribe(\r\n            (data) => {\r\n                this.article = data;\r\n                console.log(\"Article \" + this.article.Id + \" has been updated.\");\r\n                this.router.navigate([\"article/view\", this.article.Id]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n        this.editArticleForm.reset();\r\n    }\r\n\r\n    onDelete(article : Article) {\r\n        this.article = this.prepareSaveArticle();\r\n        var id = this.article.Id;\r\n        this.articleService.delete(id).subscribe(\r\n            (data) => {\r\n                console.log(\"Article \" + id + \" has been deleted.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate([\"\"]);\r\n    }\r\n\r\n    onArticleDetailView(article: Article) {\r\n        this.router.navigate([\"article/view\", article.Id]);\r\n    }\r\n\r\n    initEntityRelationship() {\r\n        return this.formBuilder.group({\r\n            Entity1Name: \"test\"\r\n            //street: ['street address', Validators.required]\r\n            //postcode: ['']\r\n        });\r\n    }\r\n\r\n    setEntityRelationships(entityRelationships: EntityRelationship[]) {\r\n        const entityRelationshipFGs = entityRelationships.map(entityRelationship => this.formBuilder.group(entityRelationship));\r\n        const entityRelationshipFormArray = this.formBuilder.array(entityRelationshipFGs);\r\n        this.editArticleForm.setControl('entityRelationships', entityRelationshipFormArray);\r\n    }\r\n\r\n    //get secretLairs(): FormArray {\r\n    //    return this.heroForm.get('secretLairs') as FormArray;\r\n    //};\r\n\r\n    addEntityRelationship() {\r\n        // add EntityRelationship to the list\r\n        const control = <FormArray>this.editArticleForm.controls['entityRelationships'];\r\n        control.push(this.initEntityRelationship());\r\n    }\r\n\r\n    removeEntityRelationship(i: number) {\r\n        // remove EntityRelationship from the list\r\n        const control = <FormArray>this.editArticleForm.controls['entityRelationships'];\r\n        control.removeAt(i);\r\n    }\r\n\r\n    prepareSaveArticle(): Article {\r\n        const formModel = this.editArticleForm.value;\r\n        const saveArticle: Article = {\r\n            Id: this.article.Id,\r\n            Title: formModel.title,\r\n            Description: formModel.description,\r\n            Text: formModel.text,\r\n            EntityRelationships: null\r\n        };\r\n        return saveArticle;\r\n    }\r\n}\r\n"]}