{"version":3,"sources":["article-detail-edit.component.ts"],"names":["ArticleDetailEditComponent","authService","articleService","entityService","relationshipService","router","activatedRoute","formBuilder","this","prototype","ngOnInit","_this","editArticleForm","group","title","forms_1","Validators","required","description","text","editEntityRelationshipsForm","entityRelationships","array","initEntityRelationship","getAll","subscribe","data","relationships","error","console","log","entities","isLoggedIn","navigate","params","map","do","id","article","article_1","Article","filter","switchMap","get","patchValue","Title","Description","setEntityRelationships","EntityRelationships","onInsert","prepareSaveArticle","add","Id","reset","onUpdate","updatedArticle","update","onDelete","delete","onBack","onArticleDetailView","Entity2Id","Entity2Name","Relationship","FormControl","entityRelationshipFGs","entityRelationship","entityRelationshipFormArray","setControl","addEntityRelationship","control","controls","push","removeEntityRelationship","i","removeAt","formModel","value","saveArticle","Text","__decorate","core_1","Component","selector","template","styles","exports_1"],"mappings":"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","file":"article-detail-edit.component.js","sourcesContent":["import {Component, OnInit} from \"@angular/core\";\r\nimport { Router, ActivatedRoute, Params} from \"@angular/router\";\r\nimport {Article} from \"./article\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport { ArticleService } from \"./article.service\";\r\nimport { EntityService } from \"./entity.service\";\r\nimport { RelationshipService } from \"./relationship.service\";\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { EntityRelationshipEditComponent } from \"./entity-relationship-edit.component\";\r\nimport { EntityRelationship } from \"./entity-relationship\";\r\nimport { Relationship } from \"./relationship\";\r\nimport { Entity } from \"./entity\"\r\n\r\n@Component({\r\n    selector: \"article-detail-edit\",\r\n    template: `\r\n<div *ngIf=\"article\">\r\n    <h2>\r\n        <a href=\"javascript:void(0)\" (click)=\"onBack()\">\r\n            &laquo; Back to Home\r\n        </a>\r\n    </h2>\r\n    <div class=\"article-container\">\r\n        <ul class=\"nav nav-tabs\">\r\n            <li role=\"presentation\" class=\"active\">\r\n                <a href=\"javascript:void(0)\">Edit</a>\r\n            </li>\r\n            <li role=\"presentation\" *ngIf=\"article.Id != 0\">\r\n                <a href=\"javascript:void(0)\" (click)=\"onArticleDetailView(article)\">View</a>\r\n            </li>\r\n        </ul>\r\n        <div class=\"panel panel-default\">\r\n            <div class=\"panel-body\">\r\n                <form class=\"article-detail-edit\" novalidate [formGroup]=\"editArticleForm\">\r\n                    <h3>\r\n                        {{ editArticleForm.get('title').value }}\r\n                        <span class=\"empty-field\" [hidden]=\"editArticleForm.get('title').valid\">\r\n                            Empty Title\r\n                        </span>\r\n                    </h3>\r\n                    <div class=\"form-group has-feedback\" [ngClass]=\"{'has-success': editArticleForm.get('title').valid, 'has-error': !editArticleForm.get('title').valid}\">\r\n                        <label for=\"input-title\">Title</label>\r\n                        <input id=\"input-title\" name=\"input-title\" type=\"text\" class=\"form-control\" formControlName=\"title\" placeholder=\"Insert the title...\"   />\r\n                        <span class=\"glyphicon form-control-feedback\" aria-hidden=\"true\" [ngClass]=\"{'glyphicon-ok': editArticleForm.get('title').valid, 'glyphicon-remove': !editArticleForm.get('title').valid}\"></span>\r\n                        <div [hidden]=\"editArticleForm.get('title').valid\" class=\"alert alert-danger\">\r\n                            You need to enter a valid Title.\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"input-description\">Description</label>\r\n                        <textarea id=\"input-description\" name=\"input-description\" class=\"form-control\" formControlName=\"description\" placeholder=\"Insert a suitable description...\" ></textarea>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"input-text\">Text</label>\r\n                        <textarea id=\"input-text\" name=\"input-text\" class=\"form-control\" formControlName=\"description\" placeholder=\"Insert a suitable description...\"></textarea>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"article.Id == 0\" class=\"commands insert\">\r\n                        <input type=\"button\" class=\"btn btn-primary\" value=\"Save\" (click)=\"onInsert()\" />\r\n                        <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onBack()\" />\r\n                    </div>\r\n                    <div *ngIf=\"article.Id != 0\" class=\"commands update\">\r\n                        <input type=\"button\" class=\"btn btn-primary\" value=\"Update\" (click)=\"onUpdate()\" />\r\n                        <input type=\"button\" class=\"btn btn-danger\" value=\"Delete\" (click)=\"onDelete(article)\" />\r\n                        <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onArticleDetailView(article)\" />\r\n                    </div>\r\n                    \r\n\r\n                    \r\n                </form>\r\n                <form class=\"article-detail-edit\" novalidate [formGroup]=\"editEntityRelationshipsForm\">\r\n                    <!--entityRelationships-->\r\n                    <div formArrayName=\"entityRelationships\">\r\n                      <div *ngFor=\"let entityRelationship of editEntityRelationshipsForm.controls.entityRelationships.controls; let i=index\" class=\"panel panel-default\">\r\n                        <div class=\"panel-heading\">\r\n                          <span>Relationship {{i + 1}}</span>\r\n                          <span class=\"glyphicon glyphicon-remove pull-right\" *ngIf=\"editEntityRelationshipsForm.controls.entityRelationships.controls.length > 1\" (click)=\"removeEntityRelationship(i)\"></span>\r\n                        </div>\r\n                        <div class=\"panel-body\" [formGroupName]=\"i\">\r\n                          <entity-relationship-edit [group]=\"editEntityRelationshipsForm.controls.entityRelationships.controls[i]\" [entityRelationship]=\"entityRelationship.value\" [relationships]=\"relationships\" [entities]=\"entities\"></entity-relationship-edit>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"margin-20\">\r\n                      <a (click)=\"addEntityRelationship()\" style=\"cursor: default\">\r\n                        Add another relationship +\r\n                      </a>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n    `,\r\n    styles: []\r\n})\r\n\r\nexport class ArticleDetailEditComponent {\r\n    article: Article;\r\n    relationships: Relationship[];\r\n    entities: Entity[];\r\n\r\n    editArticleForm: FormGroup;\r\n    editEntityRelationshipsForm: FormGroup;\r\n    \r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private articleService: ArticleService,\r\n        private entityService: EntityService,\r\n        private relationshipService: RelationshipService,\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute,\r\n        private formBuilder: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        \r\n        this.editArticleForm = this.formBuilder.group({\r\n            title: ['', Validators.required],\r\n            description: ['', Validators.required],\r\n            text: ['', Validators.required]\r\n        });\r\n\r\n        this.editEntityRelationshipsForm = this.formBuilder.group({\r\n            entityRelationships: this.formBuilder.array([this.initEntityRelationship()])\r\n        });\r\n\r\n        this.relationshipService.getAll().subscribe(\r\n            (data) => this.relationships = data,\r\n            (error) => console.log(error)\r\n        );\r\n\r\n        this.entityService.getAll().subscribe(\r\n            (data) => this.entities = data,\r\n            (error) => console.log(error)\r\n        );\r\n\r\n        if (!this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\r\n        var id;\r\n        this.activatedRoute.params\r\n            .map(params => +params['id'])\r\n            .do(id => {\r\n                console.log(id);\r\n                if (id) {\r\n                    //console.log(id);\r\n                } else if (id === 0) {\r\n                    //console.log(\"id is 0: adding a new article...\");\r\n                    this.article = new Article(0, \"New Article\", null, null, null);\r\n                } else {\r\n                    //console.log(\"Invalid id: routing back to home...\");\r\n                    this.router.navigate([\"\"]);\r\n                }\r\n            })\r\n            .filter(id => id > 0)\r\n            .switchMap(id => this.articleService.get(id))\r\n            .subscribe(article => {\r\n                this.article = article;\r\n                this.editArticleForm.patchValue({\r\n                    title: this.article.Title,\r\n                    description: this.article.Description,\r\n                    text: \"\"//,\r\n                    ////entityRelationships: this.article.EntityRelationships\r\n                    //entityRelationships: this.editArticleForm.value.entityRelationships\r\n                });\r\n                this.setEntityRelationships(article.EntityRelationships);\r\n            })\r\n            ;\r\n    }\r\n\r\n    onInsert() {\r\n        this.article = this.prepareSaveArticle();\r\n        this.articleService.add(this.article).subscribe(\r\n            (data) => {\r\n                this.article = data;\r\n                console.log(\"Article \" + this.article.Id + \" has been added.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n        this.editArticleForm.reset();\r\n    }\r\n\r\n    onUpdate() {\r\n        let updatedArticle = this.prepareSaveArticle();\r\n        console.log(updatedArticle);\r\n        this.articleService.update(updatedArticle).subscribe(\r\n            (data) => {\r\n                this.article = data;\r\n                console.log(\"Article \" + this.article.Id + \" has been updated.\");\r\n                this.router.navigate([\"article/view\", this.article.Id]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n        this.editArticleForm.reset();\r\n    }\r\n\r\n    onDelete(article : Article) {\r\n        this.article = this.prepareSaveArticle();\r\n        var id = this.article.Id;\r\n        this.articleService.delete(id).subscribe(\r\n            (data) => {\r\n                console.log(\"Article \" + id + \" has been deleted.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate([\"\"]);\r\n    }\r\n\r\n    onArticleDetailView(article: Article) {\r\n        this.router.navigate([\"article/view\", article.Id]);\r\n    }\r\n\r\n    initEntityRelationship() {\r\n        return this.formBuilder.group({\r\n            Entity2Id: 0,\r\n            Entity2Name: \"test\",\r\n            Relationship: new FormControl()\r\n            //street: ['street address', Validators.required]\r\n            //postcode: ['']\r\n        });\r\n    }\r\n\r\n    setEntityRelationships(entityRelationships: EntityRelationship[]) {\r\n        const entityRelationshipFGs = entityRelationships.map(entityRelationship => this.formBuilder.group(entityRelationship));\r\n\r\n        const entityRelationshipFormArray = this.formBuilder.array(entityRelationshipFGs);\r\n        this.editEntityRelationshipsForm.setControl('entityRelationships', entityRelationshipFormArray);\r\n    }\r\n\r\n    //get secretLairs(): FormArray {\r\n    //    return this.heroForm.get('secretLairs') as FormArray;\r\n    //};\r\n\r\n    addEntityRelationship() {\r\n        // add EntityRelationship to the list\r\n        const control = <FormArray>this.editEntityRelationshipsForm.controls['entityRelationships'];\r\n        control.push(this.initEntityRelationship());\r\n    }\r\n\r\n    removeEntityRelationship(i: number) {\r\n        // remove EntityRelationship from the list\r\n        const control = <FormArray>this.editEntityRelationshipsForm.controls['entityRelationships'];\r\n        control.removeAt(i);\r\n    }\r\n\r\n    prepareSaveArticle(): Article {\r\n        const formModel = this.editArticleForm.value;\r\n        const saveArticle: Article = {\r\n            Id: this.article.Id,\r\n            Title: formModel.title,\r\n            Description: formModel.description,\r\n            Text: formModel.text,\r\n            EntityRelationships: null\r\n        };\r\n        return saveArticle;\r\n    }\r\n}\r\n"]}